{"version":3,"file":"static/js/222.de137950.chunk.js","mappings":"6KAEA,MAAMA,EAAc,8CAqFpB,EAlFcC,KAEV,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,IAe7BG,EAAYA,KACdC,MAAMR,GAAaS,MAAMC,GACdA,EAASC,SACjBF,MAAMG,IACDA,EAAKC,OAAS,EACdV,EAAUS,GAEVT,EAAU,IAEdG,EAAS,IACTQ,QAAQC,IAAIH,EAAK,GACnB,EAOR,OAJEI,EAAAA,EAAAA,YAAU,KACNT,GAAW,GACZ,KAGHU,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAaF,UACxBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACrBC,EAAAA,EAAAA,MAAA,UAAAD,SAAA,CAAQ,WAASjB,EAAOW,OAAO,UAEnCI,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACrBF,EAAAA,EAAAA,KAAA,SAAOK,KAAK,SAASC,GAAG,SAASF,UAAU,eAAeG,YAAY,KAAKC,MAAOpB,EAAOqB,SAAWC,GAAMrB,EAASqB,EAAEC,OAAOH,YAEhIL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAWQ,MAAO,CAACC,UAAW,SAASX,SAAA,EAClDF,EAAAA,EAAAA,KAAA,UAAQK,KAAK,SAASD,UAAU,kBAAkBU,QA3ChDC,KAClBxB,MAAM,GAADyB,OAAIjC,EAAW,KAAAiC,OAAI5B,IAASI,MAAMC,GAC5BA,EAASC,SACjBF,MAAMG,IACDA,GAAQsB,OAAOC,KAAKvB,GAAMC,OAAS,EACnCV,EAAU,CAACS,IAEXT,EAAU,IAEdW,QAAQC,IAAIH,EAAK,GACnB,EAiCuFO,SAAC,SAC1EF,EAAAA,EAAAA,KAAA,UAAQK,KAAK,SAASD,UAAU,sBAAsBU,QAASxB,EAAUY,SAAC,iBAItFF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,YAAWF,UACtBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,MAAKF,SAEhBjB,EAAOW,OAAS,EAChBX,EAAOkC,KAAI,CAACC,EAAMC,IAEVA,EA7Dd,MA8DcrB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gBAAeF,UAC1BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAaF,UACxBC,EAAAA,EAAAA,MAAA,UAAAD,SAAA,CAAQ,OAAKkB,EAAKd,SAEtBN,EAAAA,EAAAA,KAAA,OAAKI,UAAU,YAAWF,UACtBF,EAAAA,EAAAA,KAAA,OAAKsB,IAAKF,EAAKG,aAAcC,MAAOJ,EAAKI,MAAOC,IAAKL,EAAKI,MAAOpB,UAAU,wBANnDiB,MAWvCrB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,qBAAoBF,UAChCF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,8BAM7B,C","sources":["pages/Image.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst apiEndPoint = \"https://jsonplaceholder.typicode.com/photos\";\r\nconst limit = 200;\r\n\r\nconst Image = () => {\r\n\r\n    const [images, setImages] = useState([]);\r\n    const [imgId, setImgId] = useState('');\r\n\r\n    const findImageById = () => {\r\n        fetch(`${apiEndPoint}/${imgId}`).then((response) => {\r\n            return response.json();\r\n        }).then((data) => {\r\n            if (data && Object.keys(data).length > 0) {\r\n                setImages([data]);\r\n            } else {\r\n                setImages([]);\r\n            }\r\n            console.log(data);\r\n        })\r\n    }\r\n\r\n    const allImages = () => {\r\n        fetch(apiEndPoint).then((response) => {\r\n            return response.json();\r\n        }).then((data) => {\r\n            if (data.length > 0) {\r\n                setImages(data);\r\n            } else {\r\n                setImages([]);\r\n            }\r\n            setImgId('');\r\n            console.log(data);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        allImages();\r\n    }, [])\r\n\r\n  return (\r\n    <>\r\n        <div className='card'>\r\n            <div className='card-header'>\r\n                <div className='row'>\r\n                    <div className='col-md-8'>\r\n                        <strong>Images ({images.length})</strong>\r\n                    </div>\r\n                    <div className='col-md-2'>\r\n                        <input type='number' id=\"postId\" className='form-control' placeholder='ID' value={imgId} onChange={(e) => setImgId(e.target.value)} />\r\n                    </div>\r\n                    <div className='col-md-2' style={{textAlign: 'right'}}>\r\n                        <button type='button' className='btn btn-success' onClick={findImageById}>GET</button>\r\n                        <button type='button' className='btn btn-danger ms-2' onClick={allImages}>ALL</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='card-body'>\r\n                <div className='row'>\r\n                {\r\n                    images.length > 0 ? \r\n                    images.map((item, index) => {\r\n                        return (\r\n                            index < limit &&\r\n                            <div className='col-md-4 mt-2' key={index}>\r\n                                <div className='card'>\r\n                                    <div className='card-header'>\r\n                                        <strong>ID: {item.id}</strong>\r\n                                    </div>\r\n                                    <div className='card-body'>\r\n                                        <img src={item.thumbnailUrl} title={item.title} alt={item.title} className='img-thumbnail' />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }) : <div className='alert alert-danger'>\r\n                            <strong>No Photo Found!</strong>\r\n                        </div>\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Image"],"names":["apiEndPoint","Image","images","setImages","useState","imgId","setImgId","allImages","fetch","then","response","json","data","length","console","log","useEffect","_jsx","_Fragment","children","_jsxs","className","type","id","placeholder","value","onChange","e","target","style","textAlign","onClick","findImageById","concat","Object","keys","map","item","index","src","thumbnailUrl","title","alt"],"sourceRoot":""}