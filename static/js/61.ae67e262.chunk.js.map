{"version":3,"file":"static/js/61.ae67e262.chunk.js","mappings":"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","sources":["pages/ImageLimit.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst apiEndPoint = \"https://jsonplaceholder.typicode.com/photos\";\r\n\r\nconst ImageLimit = () => {\r\n\r\n    //image bucket & album id bucket (main)\r\n    const [images, setImages] = useState([]);\r\n    const [albumIds, setAlbumIds] = useState([]);\r\n\r\n    //filters\r\n    const [imgId, setImgId] = useState('');\r\n    const [limit, setLimit] = useState(10);\r\n    const [albumId, setAlbumId] = useState(1);\r\n\r\n    //another api call\r\n    const findImageById = () => {\r\n        fetch(`${apiEndPoint}/${imgId}`).then((response) => {\r\n            return response.json();\r\n        }).then((data) => {\r\n            if (data && Object.keys(data).length > 0) {\r\n                setImages([data]);\r\n            } else {\r\n                setImages([]);\r\n            }\r\n            console.log(data);\r\n        })\r\n    }\r\n\r\n    //here is the main thing, where apply all filters (ablum id & limit)\r\n    //and final image bucket is ready for display\r\n    const allImages = () => {\r\n        fetch(apiEndPoint).then((response) => {\r\n            return response.json();\r\n        }).then((data) => {\r\n            if (data.length > 0) {\r\n                let filterByAlbumId = [];\r\n                let imageBoxLimit = [];\r\n                filterByAlbumId = data.filter((item) => {\r\n                    if (item.albumId == albumId) {\r\n                        return item;\r\n                    }\r\n                })\r\n                if (filterByAlbumId.length > 0) {\r\n                    filterByAlbumId.map((item, index) => {\r\n                        if (index < limit) {\r\n                            imageBoxLimit.push(item);\r\n                        }\r\n                    })\r\n                }\r\n                setImages(imageBoxLimit);\r\n            } else {\r\n                setImages([]);\r\n            }\r\n            console.log(data);\r\n        });\r\n    }\r\n\r\n    //same api endpoint call but here only collect the album ids\r\n    const allAlbumIds = () => {\r\n        fetch(apiEndPoint).then((response) => {\r\n            return response.json();\r\n        }).then((data) => {\r\n            if (data.length > 0) {\r\n                let collectIds = [];\r\n                data.map((item) => {\r\n                    collectIds.push(item.albumId);\r\n                })\r\n                if (collectIds.length > 0) {\r\n                    let uniqueItems = [...new Set(collectIds)];\r\n                    setAlbumIds(uniqueItems);\r\n                } else {\r\n                    setAlbumIds([]);\r\n                }\r\n            } else {\r\n                setAlbumIds([]);\r\n            }\r\n        });\r\n    }\r\n\r\n    const resetAll = () => {\r\n        setImgId('');\r\n        setLimit(10);\r\n        setAlbumId(1);\r\n    }\r\n\r\n    //this useEffect is call on page load & once any of these 2 dependency params value changes \r\n    useEffect(() => {\r\n        allImages();\r\n    }, [albumId, limit])\r\n\r\n    //this useEffect is call only 1 time - page load\r\n    useEffect(() => {\r\n        allAlbumIds();\r\n    }, [])\r\n\r\n  return (\r\n    <>\r\n        <div className='card'>\r\n            <div className='card-header'>\r\n                <div className='row'>\r\n                    <div className='col-md-4'>\r\n                        <strong>Images ({images.length})</strong>\r\n                    </div>\r\n                    <div className='col-md-2'>\r\n                        <select className='form-select' value={albumId} onChange={(e) => setAlbumId(e.target.value)}>\r\n                            {\r\n                                albumIds.length > 0 &&\r\n                                albumIds.map((item,index) => {\r\n                                    return (\r\n                                        <option key={index} value={item}>{item}</option>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div className='col-md-2'>\r\n                        <input type='number' id=\"limit\" className='form-control' placeholder='NO' value={limit} onChange={(e) => setLimit(e.target.value)} />\r\n                    </div>\r\n                    <div className='col-md-2'>\r\n                        <input type='number' id=\"postId\" className='form-control' placeholder='ID' value={imgId} onChange={(e) => setImgId(e.target.value)} />\r\n                    </div>\r\n                    <div className='col-md-2' style={{textAlign: 'right'}}>\r\n                        <button type='button' className='btn btn-success' onClick={findImageById}>GET</button>\r\n                        <button type='button' className='btn btn-danger ms-2' onClick={resetAll}>ALL</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='card-body'>\r\n                <div className='row'>\r\n                {\r\n                    images.length > 0 ? \r\n                    images.map((item, index) => {\r\n                        return (\r\n                            <div className='col-md-4 mt-2' key={index}>\r\n                                <div className='card'>\r\n                                    <div className='card-header'>\r\n                                        <strong>ID: {item.id}</strong> | \r\n                                        &nbsp;<strong>Album: {item.albumId}</strong>\r\n                                    </div>\r\n                                    <div className='card-body'>\r\n                                        <img src={item.thumbnailUrl} title={item.title} alt={item.title} className='img-thumbnail' />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }) : <div className='alert alert-danger'>\r\n                            <strong>No Photo Found!</strong>\r\n                        </div>\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ImageLimit"],"names":["apiEndPoint","ImageLimit","images","setImages","useState","albumIds","setAlbumIds","imgId","setImgId","limit","setLimit","albumId","setAlbumId","useEffect","fetch","then","response","json","data","length","filterByAlbumId","imageBoxLimit","filter","item","map","index","push","console","log","collectIds","uniqueItems","Set","_jsx","_Fragment","children","_jsxs","className","value","onChange","e","target","type","id","placeholder","style","textAlign","onClick","findImageById","concat","Object","keys","resetAll","src","thumbnailUrl","title","alt"],"sourceRoot":""}