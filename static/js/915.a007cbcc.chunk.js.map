{"version":3,"file":"static/js/915.a007cbcc.chunk.js","mappings":"6KAEA,MAAMA,EAAc,6CAsFpB,EApFaC,KAET,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,IAE/BG,EAAWA,KACbC,MAAMR,GAAaS,MAAMC,GACdA,EAASC,SACjBF,MAAMG,IACDA,EAAKC,OAAS,EACdV,EAASS,GAETT,EAAS,IAEbG,EAAU,IACVQ,QAAQC,IAAIH,EAAK,GACnB,EAkBR,OAHEI,EAAAA,EAAAA,YAAU,KACNT,GAAU,GACX,KAEHU,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMF,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAaF,UACxBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACrBC,EAAAA,EAAAA,MAAA,UAAAD,SAAA,CAAQ,UAAQjB,EAAMW,OAAO,UAEjCI,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACrBF,EAAAA,EAAAA,KAAA,SAAOK,KAAK,SAASC,GAAG,SAASF,UAAU,eAAeG,YAAY,KAAKC,MAAOpB,EAAQqB,SAAWC,GAAMrB,EAAUqB,EAAEC,OAAOH,YAElIL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAWQ,MAAO,CAACC,UAAW,SAASX,SAAA,EAClDF,EAAAA,EAAAA,KAAA,UAAQK,KAAK,SAASD,UAAU,kBAAkBU,QA3BjDC,KACjBxB,MAAM,GAADyB,OAAIjC,EAAW,KAAAiC,OAAI5B,IAAUI,MAAMC,GAC7BA,EAASC,SACjBF,MAAMG,IACDA,GAAQsB,OAAOC,KAAKvB,GAAMC,OAAS,EACnCV,EAAS,CAACS,IAEVT,EAAS,IAEbW,QAAQC,IAAIH,EAAK,GACnB,EAiBsFO,SAAC,SACzEF,EAAAA,EAAAA,KAAA,UAAQK,KAAK,SAASD,UAAU,sBAAsBU,QAASxB,EAASY,SAAC,iBAIrFF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,YAAWF,UACtBC,EAAAA,EAAAA,MAAA,SAAOC,UAAU,8CAA6CF,SAAA,EAC1DF,EAAAA,EAAAA,KAAA,SAAAE,UACIC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,QACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eAGZF,EAAAA,EAAAA,KAAA,SAAAE,SAEQjB,EAAMW,OAAS,EACfX,EAAMkC,KAAI,CAACC,EAAMC,KAETlB,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAKkB,EAAKd,MACVN,EAAAA,EAAAA,KAAA,MAAAE,SAAKkB,EAAKE,SACVtB,EAAAA,EAAAA,KAAA,MAAAE,SAAKkB,EAAKG,SAHLF,MAMZrB,EAAAA,EAAAA,KAAA,MAAAE,UACDF,EAAAA,EAAAA,KAAA,MAAIwB,QAAQ,IAAGtB,SAAC,gCAQzC,C","sources":["pages/Post.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst apiEndPoint = \"https://jsonplaceholder.typicode.com/posts\";\r\n\r\nconst Post = () => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [postId, setPostId] = useState('');\r\n\r\n    const allPosts = () => {\r\n        fetch(apiEndPoint).then((response) => {\r\n            return response.json();\r\n        }).then((data) => {\r\n            if (data.length > 0) {\r\n                setPosts(data);\r\n            } else {\r\n                setPosts([]);\r\n            }\r\n            setPostId('');\r\n            console.log(data);\r\n        })\r\n    }\r\n\r\n    const findPostById = () => {\r\n        fetch(`${apiEndPoint}/${postId}`).then((response) => {\r\n            return response.json();\r\n        }).then((data) => {\r\n            if (data && Object.keys(data).length > 0) {\r\n                setPosts([data]);\r\n            } else {\r\n                setPosts([]);\r\n            }\r\n            console.log(data);\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        allPosts();\r\n    }, []);\r\n  return (\r\n    <>\r\n        <div className='card'>\r\n            <div className='card-header'>\r\n                <div className='row'>\r\n                    <div className='col-md-8'>\r\n                        <strong>Posts ({posts.length})</strong>\r\n                    </div>\r\n                    <div className='col-md-2'>\r\n                        <input type='number' id=\"postId\" className='form-control' placeholder='ID' value={postId} onChange={(e) => setPostId(e.target.value)} />\r\n                    </div>\r\n                    <div className='col-md-2' style={{textAlign: 'right'}}>\r\n                        <button type='button' className='btn btn-success' onClick={findPostById}>GET</button>\r\n                        <button type='button' className='btn btn-danger ms-2' onClick={allPosts}>ALL</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='card-body'>\r\n                <table className='table table-sm table-bordered table-striped'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>TITLE</th>\r\n                            <th>BODY</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            posts.length > 0 ?\r\n                            posts.map((item, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <th>{item.id}</th>\r\n                                        <td>{item.title}</td>\r\n                                        <td>{item.body}</td>\r\n                                    </tr>\r\n                                )\r\n                            }) : <tr>\r\n                                <td colSpan=\"3\">No Post Found!</td>\r\n                            </tr>\r\n\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Post"],"names":["apiEndPoint","Post","posts","setPosts","useState","postId","setPostId","allPosts","fetch","then","response","json","data","length","console","log","useEffect","_jsx","_Fragment","children","_jsxs","className","type","id","placeholder","value","onChange","e","target","style","textAlign","onClick","findPostById","concat","Object","keys","map","item","index","title","body","colSpan"],"sourceRoot":""}